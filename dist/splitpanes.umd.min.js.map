{"version":3,"sources":["webpack://splitpanes/webpack/universalModuleDefinition","webpack://splitpanes/webpack/bootstrap","webpack://splitpanes/./src/components/splitpanes.vue?f910","webpack://splitpanes/./node_modules/@vue/cli-service/lib/commands/build/setPublicPath.js","webpack://splitpanes/src/components/splitpanes.vue","webpack://splitpanes/./src/components/splitpanes.vue","webpack://splitpanes/./src/components/splitpanes.vue?5da2","webpack://splitpanes/./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack://splitpanes/./node_modules/@vue/cli-service/lib/commands/build/entry-lib.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_splitpanes_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_8_oneOf_1_0_node_modules_css_loader_index_js_ref_8_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_8_oneOf_1_2_node_modules_sass_loader_lib_loader_js_ref_8_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_splitpanes_vue_vue_type_style_index_0_lang_scss___WEBPACK_IMPORTED_MODULE_0___default","window","document","currentScript","src","match","render","staticRenderFns","splitpanesvue_type_script_lang_js_","props","watchSlots","type","Boolean","default","horizontal","pushOtherPanes","dblClickSplitter","circularReferencePropertyExclusions","Array","data","container","vnode","offsetLeft","offsetTop","slotsCount","vnodes","panes","splitters","touch","mouseDown","dragging","activeSplitter","splitterTaps","splitter","timeoutId","slotsCopy","methods","bindEvents","addEventListener","onMouseMove","passive","onMouseUp","onMouseDown","e","splitterIndex","preventDefault","calculatePanesSize","getCurrentMouseDrag","$emit","map","pane","min","max","width","_this","setTimeout","onSplitterClick","_this$splitterTaps","onSplitterDblClick","totalMinWidths","x","touches","clientX","y","clientY","getContainerOffsetTop","force","arguments","length","undefined","el","top","offsetParent","getContainerOffsetLeft","left","getCurrentDragPercentage","drag","doc","documentElement","scrollTop","pageYOffset","clientTop","offset","concat","containerSize","sumPrevPanesSize","forEach","sums","prevPanesSize","nextPanesSize","sumNextPanesSize","prevReachedMinPanes","nextReachedMinPanes","minDrag","maxDrag","dragPercentage","Math","panesToResize","paneBefore","paneAfter","paneBeforeMaxReached","paneAfterMaxReached","vars","doPushOtherPanes","_this2","findPrevExpandedPane","index","findNextExpandedPane","reduce","total","arr","_toConsumableArray","reverse","some","mounted","$refs","beforeDestroy","removeEventListener","computed","defaultWidth","beforeUpdate","_this3","$slots","tag","text","trim","_vnode$elm","elm","_vnode$elm$parentNode","parentNode","id","className","_vnode$elm$parentNode2","style","height","replace","_vnode$elm2","_vnode$elm2$attribute","attributes","_vnode$elm2$attribute2","paneSizeInDOM","savedWidth","parseFloat","createEl","_this4","splitPanesChildren","slotsHaveChanged","discardProps","slotsExport","JSON","stringify","val","indexOf","filter","_vnode$data","_vnode$data$attrs","attrs","_attrs$splitpanesMin","_attrs$splitpanesMax","_attrs$splitpanesSiz","Default","$set","splitterAttributes","class","ref","on","_objectSpread","touchstart","mousedown","click","dblclick","push","paneAttributes","wrapperAttributes","components_splitpanesvue_type_script_lang_js_","normalizeComponent","scriptExports","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","component","splitpanes","__webpack_exports__"],"mappings":"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","file":"splitpanes.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"splitpanes\"] = factory();\n\telse\n\t\troot[\"splitpanes\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"fb15\");\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/index.js??ref--8-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/lib/loader.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=style&index=0&lang=scss&\"","// This file is imported into lib/wc client bundles.\n\nif (typeof window !== 'undefined') {\n  var i\n  if ((i = window.document.currentScript) && (i = i.src.match(/(.+\\/)[^/]+\\.js(\\?.*)?$/))) {\n    __webpack_public_path__ = i[1] // eslint-disable-line\n  }\n}\n\n// Indicate to webpack that this file can be concatenated\nexport default null\n","<script>\r\nexport default {\r\n  props: {\r\n    watchSlots: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    horizontal: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    pushOtherPanes: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    dblClickSplitter: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    circularReferencePropertyExclusions: {\r\n      type: Array,\r\n      default: () => []\r\n    }\r\n  },\r\n  data: () => ({\r\n    container: { vnode: null, offsetLeft: null, offsetTop: null },\r\n    slotsCount: 0,\r\n    vnodes: [],\r\n    panes: [],\r\n    splitters: [],\r\n    touch: { mouseDown: false, dragging: false, activeSplitter: null },\r\n    // Detect double click on touch devices.\r\n    splitterTaps: { splitter: null, timeoutId: null },\r\n    slotsCopy: ''\r\n  }),\r\n\r\n  methods: {\r\n    bindEvents () {\r\n      if ('ontouchstart' in window) {\r\n        document.addEventListener('touchmove', this.onMouseMove, { passive: false })\r\n        document.addEventListener('touchend', this.onMouseUp)\r\n      }\r\n\r\n      // Passive: false to prevent scrolling while touch dragging.\r\n      document.addEventListener('mousemove', this.onMouseMove, { passive: false })\r\n      document.addEventListener('mouseup', this.onMouseUp)\r\n    },\r\n\r\n    onMouseDown (e, splitterIndex) {\r\n      this.touch.mouseDown = true\r\n      this.touch.activeSplitter = splitterIndex\r\n    },\r\n\r\n    onMouseMove (e) {\r\n      if (this.touch.mouseDown) {\r\n        // Prevent scrolling while touch dragging (only works with an active event, eg. passive: false).\r\n        e.preventDefault()\r\n\r\n        this.touch.dragging = true\r\n        this.calculatePanesSize(this.getCurrentMouseDrag(e))\r\n        this.$emit('resize', this.panes.map(pane => ({ min: pane.min, max: pane.max, width: pane.width })))\r\n      }\r\n    },\r\n\r\n    onMouseUp () {\r\n      if (this.touch.dragging) {\r\n        this.$emit('resized', this.panes.map(pane => ({ min: pane.min, max: pane.max, width: pane.width })))\r\n      }\r\n\r\n      this.touch.mouseDown = false\r\n      // Keep dragging flag until click event is finished (click happens immediately after mouseup)\r\n      // in order to prevent emitting `splitter-click` event if splitter was dragged.\r\n      setTimeout(() => (this.touch.dragging = false), 100)\r\n    },\r\n\r\n    // If touch device, detect double tap manually (2 taps separated by less than 500ms).\r\n    onSplitterClick (e, splitterIndex) {\r\n      if ('ontouchstart' in window) {\r\n        e.preventDefault()\r\n        // eslint-disable-next-line\r\n        let { timeoutId, splitter } = this.splitterTaps\r\n\r\n        if (splitter !== splitterIndex) {\r\n          splitter = splitterIndex\r\n          timeoutId = setTimeout(() => (splitter = null), 500)\r\n        } else this.onSplitterDblClick(e, splitterIndex)\r\n      }\r\n\r\n      if (!this.touch.dragging) this.$emit('splitter-click', this.panes[splitterIndex])\r\n    },\r\n\r\n    // On splitter dbl click or dbl tap maximize this pane.\r\n    onSplitterDblClick (e, splitterIndex) {\r\n      let totalMinWidths = 0\r\n      this.panes = this.panes.map((pane, i) => {\r\n        pane.width = i === splitterIndex ? pane.max : pane.min\r\n        if (i !== splitterIndex) totalMinWidths += pane.min\r\n\r\n        return pane\r\n      })\r\n      this.panes[splitterIndex].width -= totalMinWidths\r\n      this.$emit('pane-maximize', this.panes[splitterIndex])\r\n    },\r\n\r\n    getCurrentMouseDrag: e => ({\r\n      x: e.touches ? e.touches[0].clientX : e.clientX,\r\n      y: e.touches ? e.touches[0].clientY : e.clientY\r\n    }),\r\n\r\n    // Recursively sum all the offsetTop values from current element up the tree until body.\r\n    // By doing so a padding or margin on a parent won't cause a wrong calculation.\r\n    getContainerOffsetTop (force = false) {\r\n      if (this.container.offsetTop === null || force) {\r\n        let el = this.container.vnode\r\n        let top = el.offsetTop\r\n\r\n        while ((el = el.offsetParent)) {\r\n          top += el.offsetTop\r\n        }\r\n\r\n        this.container.offsetTop = top\r\n      }\r\n\r\n      return this.container.offsetTop\r\n    },\r\n\r\n    // Recursively sum all the offsetTop values from current element up the tree until body.\r\n    getContainerOffsetLeft (force = false) {\r\n      if (this.container.offsetLeft === null || force) {\r\n        let el = this.container.vnode\r\n        let left = el.offsetLeft\r\n\r\n        while ((el = el.offsetParent)) {\r\n          left += el.offsetLeft\r\n        }\r\n\r\n        this.container.offsetLeft = left\r\n      }\r\n\r\n      return this.container.offsetLeft\r\n    },\r\n\r\n    // Returns the drag percentage of the splitter relative to the 2 panes it's inbetween.\r\n    // if the sum of width of the 2 cells  is 60%, the dragPercentage range will be 0 to 100% of this 60%.\r\n    getCurrentDragPercentage (drag) {\r\n      const splitterIndex = this.touch.activeSplitter\r\n      const doc = document.documentElement\r\n      const scrollTop = this.horizontal ? (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0) : null\r\n      const offset = this[`getContainerOffset${this.horizontal ? 'Top' : 'Left'}`]()\r\n      drag = drag[this.horizontal ? 'y' : 'x'] - offset + scrollTop\r\n\r\n      // In the code bellow 'size' refers to 'width' for vertical and 'height' for horizontal layout.\r\n      const containerSize = this.container.vnode[this.horizontal ? 'clientHeight' : 'clientWidth']\r\n      let sumPrevPanesSize = 0\r\n      this.panes.forEach((pane, i) => (sumPrevPanesSize += i < splitterIndex ? pane.width : 0))\r\n\r\n      return drag * 100 / containerSize\r\n    },\r\n\r\n    calculatePanesSize (drag) {\r\n      const splitterIndex = this.touch.activeSplitter\r\n      let sums = {\r\n        prevPanesSize: this.sumPrevPanesSize(splitterIndex),\r\n        nextPanesSize: this.sumNextPanesSize(splitterIndex),\r\n        prevReachedMinPanes: 0,\r\n        nextReachedMinPanes: 0\r\n      }\r\n\r\n      const minDrag = 0 + (this.pushOtherPanes ? 0 : sums.prevPanesSize)\r\n      const maxDrag = 100 - (this.pushOtherPanes ? 0 : sums.nextPanesSize)\r\n      const dragPercentage = Math.max(Math.min(this.getCurrentDragPercentage(drag), maxDrag), minDrag)\r\n\r\n      // If not pushing other panes, panes to resize are right before and right after splitter.\r\n      let panesToResize = [splitterIndex, splitterIndex + 1]\r\n      let paneBefore = this.panes[panesToResize[0]] || null\r\n      let paneAfter = this.panes[panesToResize[1]] || null\r\n\r\n      const paneBeforeMaxReached = paneBefore.max < 100 && (dragPercentage >= (paneBefore.max + sums.prevPanesSize))\r\n      const paneAfterMaxReached = paneAfter.max < 100 && (dragPercentage <= 100 - (paneAfter.max + this.sumNextPanesSize(splitterIndex + 1)))\r\n      // Prevent dragging beyond pane max.\r\n      if (paneBeforeMaxReached || paneAfterMaxReached) {\r\n        if (paneBeforeMaxReached) {\r\n          paneBefore.width = paneBefore.max\r\n          paneAfter.width = Math.max(100 - paneBefore.max - sums.prevPanesSize - sums.nextPanesSize, 0)\r\n        } else {\r\n          paneBefore.width = Math.max(100 - paneAfter.max - sums.prevPanesSize - this.sumNextPanesSize(splitterIndex + 1), 0)\r\n          paneAfter.width = paneAfter.max\r\n        }\r\n\r\n        return\r\n      }\r\n\r\n      // When pushOtherPanes = true, find the closest expanded pane on each side of the splitter.\r\n      if (this.pushOtherPanes) {\r\n        let vars = this.doPushOtherPanes(sums, dragPercentage)\r\n\r\n        if (!vars) return // Prevent other calculation.\r\n        else {\r\n          ({ sums, panesToResize } = vars)\r\n          paneBefore = this.panes[panesToResize[0]] || null\r\n          paneAfter = this.panes[panesToResize[1]] || null\r\n        }\r\n      }\r\n\r\n      if (paneBefore !== null) {\r\n        paneBefore.width = Math.min(Math.max(dragPercentage - sums.prevPanesSize - sums.prevReachedMinPanes, paneBefore.min), paneBefore.max)\r\n      }\r\n\r\n      if (paneAfter !== null) {\r\n        paneAfter.width = Math.min(Math.max(100 - dragPercentage - sums.nextPanesSize - sums.nextReachedMinPanes, paneAfter.min), paneAfter.max)\r\n      }\r\n    },\r\n\r\n    doPushOtherPanes (sums, dragPercentage) {\r\n      const splitterIndex = this.touch.activeSplitter\r\n      let panesToResize = [splitterIndex, splitterIndex + 1]\r\n\r\n      // Pushing Down.\r\n      // Going smaller than the current pane min width: take the previous expanded pane.\r\n      if (dragPercentage < sums.prevPanesSize + this.panes[panesToResize[0]].min) {\r\n        panesToResize[0] = this.findPrevExpandedPane(splitterIndex).index\r\n\r\n        sums.prevReachedMinPanes = 0\r\n        // If pushing a n-2 or less pane, from splitter, then make sure all in between is at min size.\r\n        if (panesToResize[0] < splitterIndex) {\r\n          this.panes.forEach((pane, i) => {\r\n            if (i > panesToResize[0] && i <= splitterIndex) {\r\n              pane.width = pane.min\r\n              sums.prevReachedMinPanes += pane.min\r\n            }\r\n          })\r\n        }\r\n\r\n        sums.prevPanesSize = this.sumPrevPanesSize(panesToResize[0])\r\n\r\n        // If nothing else to push down, cancel dragging.\r\n        if (panesToResize[0] === undefined) {\r\n          sums.prevReachedMinPanes = 0\r\n          this.panes[0].width = this.panes[0].min\r\n          this.panes.forEach((pane, i) => {\r\n            if (i > 0 && i <= splitterIndex) {\r\n              pane.width = pane.min\r\n              sums.prevReachedMinPanes += pane.min\r\n            }\r\n          })\r\n          this.panes[panesToResize[1]].width = 100 - sums.prevReachedMinPanes - this.panes[0].min - sums.prevPanesSize - sums.nextPanesSize\r\n          return null\r\n        }\r\n      }\r\n\r\n      // Pushing Up.\r\n      // Pushing up beyond min width is reached: take the next expanded pane.\r\n      if (dragPercentage > 100 - sums.nextPanesSize - this.panes[panesToResize[1]].min) {\r\n        panesToResize[1] = this.findNextExpandedPane(splitterIndex).index\r\n\r\n        sums.nextReachedMinPanes = 0\r\n        // If pushing a n+2 or more pane, from splitter, then make sure all in between is at min size.\r\n        if (panesToResize[1] > splitterIndex + 1) {\r\n          this.panes.forEach((pane, i) => {\r\n            if (i > splitterIndex && i < panesToResize[1]) {\r\n              pane.width = pane.min\r\n              sums.nextReachedMinPanes += pane.min\r\n            }\r\n          })\r\n        }\r\n\r\n        sums.nextPanesSize = this.sumNextPanesSize(panesToResize[1] - 1)\r\n\r\n        // If nothing else to push up, cancel dragging.\r\n        if (panesToResize[1] === undefined) {\r\n          sums.nextReachedMinPanes = 0\r\n          this.panes[this.panes.length - 1].width = this.panes[this.panes.length - 1].min\r\n          this.panes.forEach((pane, i) => {\r\n            if (i < this.panes.length - 1 && i >= splitterIndex + 1) {\r\n              pane.width = pane.min\r\n              sums.nextReachedMinPanes += pane.min\r\n            }\r\n          })\r\n\r\n          this.panes[panesToResize[0]].width = 100 - sums.prevPanesSize - sums.nextReachedMinPanes - this.panes[this.panes.length - 1].min - sums.nextPanesSize\r\n          return null\r\n        }\r\n      }\r\n\r\n      return { sums, panesToResize }\r\n    },\r\n\r\n    sumPrevPanesSize (splitterIndex) {\r\n      return this.panes.reduce((total, pane, i) => total + (i < splitterIndex ? pane.width : 0), 0)\r\n    },\r\n\r\n    sumNextPanesSize (splitterIndex) {\r\n      return this.panes.reduce((total, pane, i) => total + (i > splitterIndex + 1 ? pane.width : 0), 0)\r\n    },\r\n\r\n    // Return the previous pane from siblings which has a size (width for vert or height for horz) of more than 0.\r\n    findPrevExpandedPane (splitterIndex) {\r\n      let pane = {}\r\n      let arr = [...this.panes]\r\n      arr.reverse().some(p => {\r\n        if (p.index < splitterIndex && p.width > p.min) pane = p\r\n        return p.index < splitterIndex && p.width > p.min\r\n      })\r\n      return pane\r\n    },\r\n\r\n    // Return the next pane from siblings which has a size (width for vert or height for horz) of more than 0.\r\n    findNextExpandedPane (splitterIndex) {\r\n      let pane = {}\r\n      this.panes.some(p => {\r\n        if (p.index > splitterIndex + 1 && p.width > p.min) pane = p\r\n        return p.index > splitterIndex + 1 && p.width > p.min\r\n      })\r\n      return pane\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    this.container.vnode = this.$refs.container\r\n    this.bindEvents()\r\n    this.$emit('ready')\r\n  },\r\n\r\n  beforeDestroy () {\r\n    document.removeEventListener('touchmove', this.onMouseMove, { passive: false })\r\n    document.removeEventListener('mousemove', this.onMouseMove, { passive: false })\r\n    document.removeEventListener('touchend', this.onMouseUp)\r\n    document.removeEventListener('mouseup', this.onMouseUp)\r\n  },\r\n\r\n  computed: {\r\n    defaultWidth () {\r\n      return 100 / this.vnodes.length\r\n    }\r\n  },\r\n\r\n  beforeUpdate () {\r\n    // Not the first time but all the others, save the current width before re-render and\r\n    // reapply on rendering.\r\n    if (this.panes.length) {\r\n      this.$slots.default.forEach(vnode => {\r\n        // Discard empty text nodes.\r\n        if (!vnode.tag && !(vnode.text || '').trim()) return\r\n\r\n        let { elm: { parentNode: { id, className, style: { width, height } = {} } = {} } = {} } = vnode\r\n\r\n        if (className === 'splitpanes__pane' && (id = id.replace('pane_', '')) && this.panes[id] &&\r\n          (width || height)) {\r\n          // Before saving computed css width or height into `savedWidth` check if `splitpanes-size` has changed.\r\n          // If so save this value instead (means size has changed programmatically).\r\n          const {\r\n            elm: { attributes: { 'splitpanes-size': { value: paneSizeInDOM } = {} } = {} } = {}\r\n          } = vnode\r\n\r\n          if (paneSizeInDOM !== undefined) this.panes[id].savedWidth = parseFloat(paneSizeInDOM)\r\n          else this.panes[id].savedWidth = parseFloat(width || height)\r\n        }\r\n      })\r\n    }\r\n  },\r\n\r\n  render (createEl) {\r\n    const splitPanesChildren = []\r\n\r\n    if (!this.$slots.default) splitPanesChildren.push(createEl('div', 'Splitpanes needs some content here.'))\r\n    else {\r\n      // Since we are adding splitter nodes in DOM, we need to keep track if slots have changed\r\n      // to avoid an infinite loop.\r\n      let slotsHaveChanged = false\r\n\r\n      if (this.watchSlots) {\r\n        const discardProps = ['$options', '$parent', '$root', '$el',\r\n          '$refs', '$slots', '$scopedSlots', '$vnode', '_data', '__vue__',\r\n          '_self', '_vnode', '_watcher', '_watchers', '_computedWatchers', '_renderProxy', 'vnodes',\r\n          'container', 'Ctor', 'context', 'parent', 'componentInstance', 'componentOptions',\r\n          'fnContext', 'fnOptions',\r\n          ...this.circularReferencePropertyExclusions]\r\n\r\n        const slotsExport = JSON.stringify(this.$slots.default, (name, val) => {\r\n          // Discard the properties listed in array to prevent circular reference.\r\n          return discardProps.indexOf(name) > -1 ? undefined : val\r\n        })\r\n\r\n        slotsHaveChanged = this.slotsCopy !== slotsExport\r\n\r\n        if (slotsHaveChanged) this.slotsCopy = slotsExport\r\n      }\r\n\r\n      // Create the panes and splitters arrays each time the slots are updated.\r\n      if (this.slotsCount !== this.$slots.default.length || slotsHaveChanged) {\r\n        this.vnodes = this.$slots.default.filter(vnode => vnode.tag || (vnode.text || '').trim())\r\n        this.vnodes.forEach((vnode, i) => {\r\n          const { data: { attrs = {} } = {} } = vnode\r\n\r\n          // Extract min, max & default size from the panes HTML attributes.\r\n          const {\r\n            'splitpanes-min': min = 0,\r\n            'splitpanes-max': max = 100,\r\n            'splitpanes-size': Default = this.defaultWidth\r\n          } = attrs\r\n\r\n          const savedWidth = this.panes[i] && this.panes[i].savedWidth !== undefined ? this.panes[i].savedWidth : null\r\n\r\n          this.$set(this.panes, i, {\r\n            // ! \\\\ Reapply saved width (if any) after slots have changed.\r\n            width: savedWidth !== null ? savedWidth : parseFloat(Default),\r\n            index: i,\r\n            min: parseFloat(min),\r\n            max: parseFloat(max)\r\n          })\r\n\r\n          if (i) this.$set(this.splitters, i - 1, { id: `splitter-${i - 1}`, index: i - 1 })\r\n        })\r\n\r\n        this.slotsCount = this.$slots.default.length\r\n      }\r\n\r\n      this.vnodes.forEach((vnode, i) => {\r\n        // Splitter.\r\n        if (i) {\r\n          let splitterAttributes = {\r\n            id: i - 1,\r\n            class: 'splitpanes__splitter',\r\n            ref: `splitter-${i - 1}`,\r\n            on: {\r\n              ...('ontouchstart' in window ? { touchstart: e => this.onMouseDown(e, i - 1) } : {}),\r\n              mousedown: e => this.onMouseDown(e, i - 1),\r\n              click: e => this.onSplitterClick(e, i),\r\n              ...(this.dblClickSplitter ? { dblclick: e => this.onSplitterDblClick(e, i) } : {})\r\n            }\r\n          }\r\n          splitPanesChildren.push(createEl('div', splitterAttributes))\r\n        }\r\n\r\n        // Pane.\r\n        let paneAttributes = {\r\n          attrs: {\r\n            id: `pane_${i}`\r\n          },\r\n          class: 'splitpanes__pane',\r\n          style: {\r\n            ...(this.horizontal ? { height: `${this.panes[i].width}%` } : null),\r\n            ...(!this.horizontal ? { width: `${this.panes[i].width}%` } : null)\r\n          },\r\n          on: {\r\n            click: e => this.$emit('pane-click', this.panes[i])\r\n          }\r\n        }\r\n        splitPanesChildren.push(createEl('div', paneAttributes, [vnode]))\r\n      })\r\n    }\r\n\r\n    // Wrapper.\r\n    let wrapperAttributes = {\r\n      class: [\r\n        'splitpanes',\r\n        `splitpanes--${this.horizontal ? 'horizontal' : 'vertical'}`,\r\n        this.touch.dragging ? 'splitpanes--dragging' : ''\r\n      ],\r\n      ref: 'container'\r\n    }\r\n\r\n    return createEl('div', wrapperAttributes, splitPanesChildren)\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.splitpanes {\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  &--vertical {flex-direction: row;}\r\n  &--horizontal {flex-direction: column;}\r\n  &--dragging * {user-select: none;}\r\n\r\n  &__pane {\r\n    width: 100%;\r\n    height: 100%;\r\n    overflow: hidden;\r\n    transition: width 0.2s ease-out, height 0.2s ease-out;\r\n\r\n    .splitpanes--dragging & {transition: none;}\r\n  }\r\n\r\n  // Disable default zoom behavior on touch device when double tapping splitter.\r\n  &__splitter {touch-action: none;}\r\n  &--vertical > .splitpanes__splitter {min-width: 1px;cursor: col-resize;}\r\n  &--horizontal > .splitpanes__splitter {min-height: 1px;cursor: row-resize;}\r\n}\r\n\r\n.splitpanes.default-theme {\r\n  .splitpanes__pane {\r\n    background-color: #f2f2f2;\r\n  }\r\n\r\n  .splitpanes__splitter {\r\n    background-color: #fff;\r\n    box-sizing: border-box;\r\n    position: relative;\r\n\r\n    &:before, &:after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 50%;\r\n      left: 50%;\r\n      background-color: rgba(0, 0, 0, .15);\r\n      transition: background-color 0.3s;\r\n    }\r\n    &:hover:before, &:hover:after {background-color: rgba(0, 0, 0, .25);}\r\n  }\r\n}\r\n\r\n.default-theme {\r\n  &.splitpanes .splitpanes .splitpanes__splitter {\r\n    z-index: 1;\r\n  }\r\n\r\n  &.splitpanes--vertical > .splitpanes__splitter,\r\n  .splitpanes--vertical > .splitpanes__splitter {\r\n    width: 9px;\r\n    border-left: 1px solid #eee;\r\n    margin-left: -1px;\r\n\r\n    &:before, &:after {\r\n      transform: translateY(-50%);\r\n      width: 1px;\r\n      height: 30px;\r\n    }\r\n    &:before {margin-left: -2px;}\r\n    &:after {margin-left: 1px;}\r\n  }\r\n\r\n  &.splitpanes--horizontal > .splitpanes__splitter,\r\n  .splitpanes--horizontal > .splitpanes__splitter {\r\n    height: 9px;\r\n    border-top: 1px solid #eee;\r\n    margin-top: -1px;\r\n\r\n    &:before,\r\n    &:after {\r\n      transform: translateX(-50%);\r\n      width: 30px;\r\n      height: 1px;\r\n    }\r\n    &:before {margin-top: -2px;}\r\n    &:after {margin-top: 1px;}\r\n  }\r\n}\r\n</style>\r\n","var render, staticRenderFns\nimport script from \"./splitpanes.vue?vue&type=script&lang=js&\"\nexport * from \"./splitpanes.vue?vue&type=script&lang=js&\"\nimport style0 from \"./splitpanes.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./splitpanes.vue?vue&type=script&lang=js&\"","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","import './setPublicPath'\nimport mod from '~entry'\nexport default mod\nexport * from '~entry'\n"],"sourceRoot":""}